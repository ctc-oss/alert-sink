apiVersion: v1
kind: Template
metadata:
  name: ava-alert-sink
message: |-
  The following service(s) have been created in your project: ${DISPLAY_NAME}.

     Kafka Broker: ${KAFKA_BROKER}
    Database Host: ${PERSIST_HOST}
    Database Name: ${PERSIST_DB_NAME}

  This service will be exposed with external route to http://${EXT_HOSTNAME}.openshift.ctc.com
objects:
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      app: ${DISPLAY_NAME}
    name: ${DISPLAY_NAME}
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: ${DISPLAY_NAME}:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        uri: https://gitlab-int.ctc.com/big/alert-sink.git
        ref: ${SOURCE_REPOSITORY_REF}
      sourceSecret:
        name: ${DISPLAY_NAME}-linux-ca
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: SBT_SUBPROJECT
          value: alert-sink-impl
        forcePull: true
        from:
          kind: DockerImage
          name: docker.ctc.com/ctc/sbts2i
      type: Source
    triggers:
    - generic:
        secret: 6ma3gfBb5Cicm2uy48Tm
      type: Generic
    - type: ConfigChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: ${DISPLAY_NAME}
    labels:
      application: ${DISPLAY_NAME}
  spec:
    dockerImageRepository: ''
    tags:
    - name: latest
- apiVersion: v1
  kind: Secret
  data:
    ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUdQRENDQkNTZ0F3SUJBZ0lLRXFvcUdBQUFBQUFBQ3pBTkJna3Foa2lHOXcwQkFRVUZBREF2TVF3d0NnWUQKVlFRR0V3TmpiMjB4RERBS0JnTlZCQW9UQTJOMFl6RVJNQThHQTFVRUF4TUlZMkV0Y205dmRERXdIaGNOTVRZdwpOREF4TVRRMU56STRXaGNOTWpZd05EQXhNVFV3TnpJNFdqQ0J3akVMTUFrR0ExVUVCaE1DVlZNeEZUQVRCZ05WCkJBZ1RERkJsYm01emVXeDJZVzVwWVRFU01CQUdBMVVFQnhNSlNtOW9ibk4wYjNkdU1Td3dLZ1lEVlFRS0V5TkQKYjI1amRYSnlaVzUwSUZSbFkyaHViMnh2WjJsbGN5QkRiM0p3YjNKaGRHbHZiakVpTUNBR0ExVUVDeE1aUlc1MApaWEp3Y21selpTQkRlV0psY2lCVFpXTjFjbWwwZVRFWk1CY0dBMVVFQXhNUWJHbHVkWGd0WTJFdVkzUmpMbU52CmJURWJNQmtHQ1NxR1NJYjNEUUVKQVJZTVpHRnNlVUJqZEdNdVkyOXRNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUYKQUFPQ0FROEFNSUlCQ2dLQ0FRRUF6NVZmUkpiaXhxa1BxczU5ZVMvS3AvRTFiU2NBOXhYbFBJZDZBeDdhLzNyZgp4d2ZQWXBrZXBrbGZTdFQxVG9nZHBJYXhKQ3hiOU5XdjVpQVpST3JNVGtTRE9tQUQ1UnZHbjFQbXBFOTN4U21zCmdaNHZ4NU5vMzBveUpmUHlrVThQTzFyODVRaE5mU0pBdGE2eU9NTTd3S0RERGxkblBncEJybEE4TzMzNzE5SUIKREVOZmhWTjhzWmdROTU5cTRFKy9CeElGaVNZRjEyZnZjM09nYWFuRHhNVXp2amsyclNLUktXS25kRTlraGlJZApaalJsb2VxNkNRTDZtT2YxTk5TVlkrdnNXSjRiSGl0T2tIbnFDMEtUWTBVdEFmUkhnVGZoSWh2SFhBSy8zVlRTCkYyajNNYkFDaVZlbkttbmo4OGRCZ3pvV2NJakVxbndxYlRKNGhzajI5d0lEQVFBQm80SUJ4RENDQWNBd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVLT1o2YVU3VlVVTDhKQlM2Y3YzVFdUTk9PaWN3SHdZRApWUjBqQkJnd0ZvQVVpemF3alNyQ3hWSFgxTDNZRFVwRG9Sa2QwYjh3UXdZRFZSMGZCRHd3T2pBNG9EYWdOSVl5CmFIUjBjRG92TDJOMFl5MWpZVEV1WVdRdVkzUmpaM05qTG05eVp5OURaWEowWkdGMFlTOWpZUzF5YjI5ME1TNWoKY213d2dmOEdDQ3NHQVFVRkJ3RUJCSUh5TUlIdk1JR2pCZ2dyQmdFRkJRY3dBb2FCbG14a1lYQTZMeTh2UTA0OQpZMkV0Y205dmRERXNRMDQ5UVVsQkxFTk9QVkIxWW14cFl5VXlNRXRsZVNVeU1GTmxjblpwWTJWekxFTk9QVk5sCmNuWnBZMlZ6TEVOT1BVTnZibVpwWjNWeVlYUnBiMjRzUkVNOVkzUmpMRVJEUFdOdmJUOWpRVU5sY25ScFptbGoKWVhSbFAySmhjMlUvYjJKcVpXTjBRMnhoYzNNOVkyVnlkR2xtYVdOaGRHbHZia0YxZEdodmNtbDBlVEJIQmdncgpCZ0VGQlFjd0FvWTdhSFIwY0RvdkwyTjBZeTFqWVRFdVlXUXVZM1JqWjNOakxtOXlaeTlEWlhKMFJHRjBZUzlqCllTMXliMjkwTVY5allTMXliMjkwTVM1amNuUXdHUVlKS3dZQkJBR0NOeFFDQkF3ZUNnQlRBSFVBWWdCREFFRXcKQ3dZRFZSMFBCQVFEQWdHR01BMEdDU3FHU0liM0RRRUJCUVVBQTRJQ0FRQnVVby9pTFFOZ3JXajNnSkZHUlV2OAoxMDJ4RFJ0ZkxKY0dHL3d6NmxaRmZYdWFSZVVEeC9NZGtydGxVcE1SYU04ekU4b1ZSQ3lCbURBU0ZVcjZOYXhoCmNzMnpQbVNQZFgwdUIwQWdrcDI2Q3EvUlpOVnc0bTZsbE42a0c1VVY1NEJpekJJcFFzZnhPbnZKalVyWkQrN1AKaG00MXhtczZtRHU3WVFWQkh0WVVCQ2hVUE41bTZKdDJHVzZyOEw0UTJ3ZlpOWXpRMGpzaWxudy9Rcm5BSUxwdAp4dU9xb0MxQ3AyWGl2TUFkVzkzSXJzWUJkVEZTWXN5THR5b3N4a2xDdmVVUThQTEFZbG1GK0tldlVodWN1WWl4CmZ2TTJUY0dvMU04Vm5QbU5uM3hHN3BHNWlKMHBpSDlZUi8zejJSd205ZG8yUTMxS1JPMEVoc2tIWXBMaVVOUTYKZlpVZjIzYUl0Y24zSU1qNStQZ01NUWlqbVFJVndSMEp2a1N3MTl2L2o5dTZ5ZDJRb2sxTEJCWUw5SlBmbVd2SAo4c2FFWUFRVlFhdzZ5ZkR0cm5wSVJLc0ZSMmZpZXBYNjlTRkVTbzNzK0Y2bmJndjdBUlYvRzEwMlhBbk9HTmdzCnZIdCtIQXJDdTQrSm0ydDVUdmZGZjJrTFVkb29vTy9oTVlaWFB2ODBQZEpBeTcxQzdrVUUxQUgzOS9ZR1l6VFQKK1hzZHVXYi92UUR2MmpjbnJDZkt5cnBYeEFBNmh5S29FbmN1aGZkdTRJRHpPNW5JaVFCMUlsSDJNQ3JiL1NURgppY0lubXQ5bmN3b2ZzVnhqUysvQmJuUUpoNzFKcW9oNk5LUkppTnNkNjd3YzZJdUZBUHU0T1YwNWNUbmpNT1htCldoQjZDSm41ekJVWnlaZjVIMzBmTnc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    password: ""
    username: ""
  metadata:
    name: ${DISPLAY_NAME}-linux-ca
  type: kubernetes.io/basic-auth
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${DISPLAY_NAME}
    name: ${DISPLAY_NAME}
  spec:
    ports:
    - name: 9000-tcp
      port: 9000
      protocol: TCP
      targetPort: 9000
    selector:
      app: ${DISPLAY_NAME}
      deploymentconfig: ${DISPLAY_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    generation: 1
    labels:
      app: ${DISPLAY_NAME}
    name: ${DISPLAY_NAME}
  spec:
    replicas: 1
    selector:
      app: ${DISPLAY_NAME}
      deploymentconfig: ${DISPLAY_NAME}
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${DISPLAY_NAME}
          deploymentconfig: ${DISPLAY_NAME}
      spec:
        containers:
        - env:
          - name: SBT_SUBPROJECT
            value: alert-sink-impl
          - name: KAFKA_BROKER
            value: ${KAFKA_BROKER}
          - name: PERSIST_HOST
            value: ${PERSIST_HOST}
          - name: PERSIST_DB_NAME
            value: ${PERSIST_DB_NAME}
          image: ""
          imagePullPolicy: Always
          name: ${DISPLAY_NAME}
          ports:
          - containerPort: 9000
            protocol: TCP
          resources: {}
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${DISPLAY_NAME}
        from:
          kind: ImageStreamTag
          name: ${DISPLAY_NAME}:latest
      type: ImageChange
  status: {}
- apiVersion: v1
  kind: Route
  metadata:
    name: ${DISPLAY_NAME}
  spec:
    host: ${EXT_HOSTNAME}.openshift.ctc.com
    to:
      kind: Service
      name: ${DISPLAY_NAME}
      weight: 100
    port:
      targetPort: 9000-tcp
    wildcardPolicy: None
  status:
    ingress:
      - host: ${EXT_HOSTNAME}.openshift.ctc.com
        routerName: router
        wildcardPolicy: None

parameters:
- name: DISPLAY_NAME
  displayName: Name
  description: The name given to components of this deployment.
  value: alert-sink
  required: true
- name: SOURCE_REPOSITORY_REF
  displayName: Git Reference
  description: Set this to a branch name, tag or other ref of your repository if you are not using the default branch.
  value: master
  required: true
- name: KAFKA_BROKER
  displayName: Kafka Broker
  description: The Kafka broker URI.
  value: kafkanetes:9092
  required: true
- name: PERSIST_HOST
  displayName: Database Host
  description: The service name hosting the database.
  value: mysql
  required: true
- name: PERSIST_DB_NAME
  displayName: Database Name
  description: The name of the persistence database.
  value: alert-sink
  required: true
- name: EXT_HOSTNAME
  displayName: External Hostname
  description: The route exposed subdomain for this service (prepended to openshift.ctc.com).
  value: alert-sink
  required: true
